name: Quick Test

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  quick-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install minimal dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ libssl-dev libcurl4-openssl-dev nlohmann-json3-dev pkg-config
    
    - name: Configure with verbose output
      run: |
        echo "CMake version:"
        cmake --version
        echo "Checking for dependencies:"
        pkg-config --modversion openssl || echo "OpenSSL pkg-config not found"
        pkg-config --modversion libcurl || echo "CURL pkg-config not found"
        echo "Source files check:"
        ls -la src/logger.cpp || echo "logger.cpp not found"
        find src -name "*.cpp" | wc -l
        rm -rf build
        mkdir -p build
        cd build
        cmake .. -DBUILD_TESTS=OFF -DBUILD_EXAMPLES=OFF -DCMAKE_BUILD_TYPE=Release || (echo "CMake failed"; if [ -f CMakeFiles/CMakeError.log ]; then cat CMakeFiles/CMakeError.log; fi; if [ -f CMakeFiles/CMakeOutput.log ]; then echo "=== CMakeOutput.log ==="; tail -100 CMakeFiles/CMakeOutput.log; fi; exit 1)
        echo "Generated Makefile targets:"
        grep "logger" Makefile || echo "No logger references in Makefile"
    
    - name: Build library only
      run: |
        cd build
        echo "Starting build with $(nproc) cores"
        make neocpp VERBOSE=1 -j$(nproc) 2>&1 | tee build.log
        if [ ${PIPESTATUS[0]} -ne 0 ]; then
          echo "Build failed. Last 100 lines of output:"
          tail -100 build.log
          exit 1
        fi
    
    - name: Check library
      run: |
        ls -la build/
        file build/libneocpp.a || echo "Library not found"